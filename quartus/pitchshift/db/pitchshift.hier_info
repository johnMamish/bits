|pitchshift
CLOCK_50 => CLOCK_50.IN2
I2C_SCLK <> I2C_SCLK
I2C_SDAT <> I2C_SDAT
NES_PS <= nes_controller_reader:controller_reader.ps
NES_CK <= nes_controller_reader:controller_reader.ck
NES_DO => NES_DO.IN1
AUD_XCK <= clk_12_5.DB_MAX_OUTPUT_PORT_TYPE
AUD_BCLK <= i2s:i2s.BCK
AUD_DACLRCK <= AUD_DACLRCK.DB_MAX_OUTPUT_PORT_TYPE
AUD_DACDAT <= i2s:i2s.DAT
AUD_ADCLRCK <= AUD_DACLRCK.DB_MAX_OUTPUT_PORT_TYPE
AUD_ADCDAT => GPIO_0[7].DATAIN
LEDR[0] <= nes_controller_reader:controller_reader.buttons
LEDR[1] <= nes_controller_reader:controller_reader.buttons
LEDR[2] <= nes_controller_reader:controller_reader.buttons
LEDR[3] <= nes_controller_reader:controller_reader.buttons
LEDR[4] <= nes_controller_reader:controller_reader.buttons
LEDR[5] <= nes_controller_reader:controller_reader.buttons
LEDR[6] <= nes_controller_reader:controller_reader.buttons
LEDR[7] <= nes_controller_reader:controller_reader.buttons
LEDR[8] <= <GND>
LEDR[9] <= <GND>
LEDR[10] <= <GND>
LEDR[11] <= <GND>
LEDR[12] <= <GND>
LEDR[13] <= <GND>
LEDR[14] <= <GND>
LEDR[15] <= <GND>
LEDR[16] <= <GND>
LEDR[17] <= <GND>
GPIO_0[0] <= GPIO_0[0].DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[1] <= GPIO_0[1].DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[2] <= clk_12_5.DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[3] <= i2s:i2s.BCK
GPIO_0[4] <= AUD_DACLRCK.DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[5] <= i2s:i2s.DAT
GPIO_0[6] <= AUD_DACLRCK.DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[7] <= AUD_ADCDAT.DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[8] <= <GND>
GPIO_0[9] <= <GND>
GPIO_0[10] <= <GND>
GPIO_0[11] <= <GND>
GPIO_0[12] <= <GND>
GPIO_0[13] <= <GND>
GPIO_0[14] <= <GND>
GPIO_0[15] <= <GND>
GPIO_0[16] <= <GND>
GPIO_0[17] <= <GND>
GPIO_0[18] <= <GND>
GPIO_0[19] <= <GND>
GPIO_0[20] <= <GND>
GPIO_0[21] <= <GND>
GPIO_0[22] <= <GND>
GPIO_0[23] <= <GND>
GPIO_0[24] <= <GND>
GPIO_0[25] <= <GND>
GPIO_0[26] <= <GND>
GPIO_0[27] <= <GND>
GPIO_0[28] <= <GND>
GPIO_0[29] <= <GND>
GPIO_0[30] <= <GND>
GPIO_0[31] <= <GND>
GPIO_0[32] <= <GND>


|pitchshift|divide_by_n:clk_12_5_divider
clk => out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => out.OUTPUTSELECT
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|resetter:resetter
clock => reset_count[0].CLK
clock => reset_count[1].CLK
clock => reset_count[2].CLK
clock => reset_count[3].CLK
clock => reset_count[4].CLK
clock => reset_count[5].CLK
clock => reset_count[6].CLK
clock => reset_count[7].CLK
clock => reset_count[8].CLK
clock => reset_count[9].CLK
clock => reset_count[10].CLK
clock => reset_count[11].CLK
clock => reset_count[12].CLK
clock => reset_count[13].CLK
clock => reset_count[14].CLK
clock => reset_count[15].CLK
clock => reset_count[16].CLK
reset <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|wm_setter_upper:wm8731_init
clock => clock.IN3
reset => reset.IN3
scl_o <= i2c_master:i2c_master.scl_o
sda_o <= i2c_master:i2c_master.sda_o
scl_in => scl_in.IN1
sda_in => sda_in.IN1


|pitchshift|wm_setter_upper:wm8731_init|i2c_init:i2c_init
clk => data_out_reg[0].CLK
clk => data_out_reg[1].CLK
clk => data_out_reg[2].CLK
clk => data_out_reg[3].CLK
clk => data_out_reg[4].CLK
clk => data_out_reg[5].CLK
clk => data_out_reg[6].CLK
clk => data_out_reg[7].CLK
clk => cmd_stop_reg.CLK
clk => cmd_write_reg.CLK
clk => cmd_start_reg.CLK
clk => cmd_address_reg[0].CLK
clk => cmd_address_reg[1].CLK
clk => cmd_address_reg[2].CLK
clk => cmd_address_reg[3].CLK
clk => cmd_address_reg[4].CLK
clk => cmd_address_reg[5].CLK
clk => cmd_address_reg[6].CLK
clk => busy_reg.CLK
clk => start_flag_reg.CLK
clk => data_out_valid_reg.CLK
clk => cmd_valid_reg.CLK
clk => cur_address_reg[0].CLK
clk => cur_address_reg[1].CLK
clk => cur_address_reg[2].CLK
clk => cur_address_reg[3].CLK
clk => cur_address_reg[4].CLK
clk => cur_address_reg[5].CLK
clk => cur_address_reg[6].CLK
clk => data_ptr_reg[0].CLK
clk => data_ptr_reg[1].CLK
clk => data_ptr_reg[2].CLK
clk => data_ptr_reg[3].CLK
clk => data_ptr_reg[4].CLK
clk => data_ptr_reg[5].CLK
clk => data_ptr_reg[6].CLK
clk => address_ptr_reg[0].CLK
clk => address_ptr_reg[1].CLK
clk => address_ptr_reg[2].CLK
clk => address_ptr_reg[3].CLK
clk => address_ptr_reg[4].CLK
clk => address_ptr_reg[5].CLK
clk => address_ptr_reg[6].CLK
clk => address_reg[0].CLK
clk => address_reg[1].CLK
clk => address_reg[2].CLK
clk => address_reg[3].CLK
clk => address_reg[4].CLK
clk => address_reg[5].CLK
clk => address_reg[6].CLK
clk => init_data_reg[0].CLK
clk => init_data_reg[1].CLK
clk => init_data_reg[2].CLK
clk => init_data_reg[3].CLK
clk => init_data_reg[4].CLK
clk => init_data_reg[5].CLK
clk => init_data_reg[6].CLK
clk => init_data_reg[7].CLK
clk => init_data_reg[8].CLK
clk => state_reg~1.DATAIN
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => init_data_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => address_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => data_ptr_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cur_address_reg.OUTPUTSELECT
rst => cmd_valid_reg.OUTPUTSELECT
rst => data_out_valid_reg.OUTPUTSELECT
rst => start_flag_reg.OUTPUTSELECT
rst => busy_reg.OUTPUTSELECT
cmd_address[0] <= cmd_address_reg[0].DB_MAX_OUTPUT_PORT_TYPE
cmd_address[1] <= cmd_address_reg[1].DB_MAX_OUTPUT_PORT_TYPE
cmd_address[2] <= cmd_address_reg[2].DB_MAX_OUTPUT_PORT_TYPE
cmd_address[3] <= cmd_address_reg[3].DB_MAX_OUTPUT_PORT_TYPE
cmd_address[4] <= cmd_address_reg[4].DB_MAX_OUTPUT_PORT_TYPE
cmd_address[5] <= cmd_address_reg[5].DB_MAX_OUTPUT_PORT_TYPE
cmd_address[6] <= cmd_address_reg[6].DB_MAX_OUTPUT_PORT_TYPE
cmd_start <= cmd_start_reg.DB_MAX_OUTPUT_PORT_TYPE
cmd_read <= <GND>
cmd_write <= cmd_write_reg.DB_MAX_OUTPUT_PORT_TYPE
cmd_write_multiple <= <GND>
cmd_stop <= cmd_stop_reg.DB_MAX_OUTPUT_PORT_TYPE
cmd_valid <= cmd_valid_reg.DB_MAX_OUTPUT_PORT_TYPE
cmd_ready => cmd_start_next.IN1
cmd_ready => cmd_valid_next.IN1
data_out[0] <= data_out_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_out_valid <= data_out_valid_reg.DB_MAX_OUTPUT_PORT_TYPE
data_out_ready => data_out_valid_next.IN1
data_out_last <= <VCC>
busy <= busy_reg.DB_MAX_OUTPUT_PORT_TYPE
start => always0.IN1
start => start_flag_reg.IN1


|pitchshift|wm_setter_upper:wm8731_init|pulse_one:i2c_init_start_pulse
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => count[9].CLK
clock => count[10].CLK
clock => count[11].CLK
clock => count[12].CLK
clock => count[13].CLK
clock => count[14].CLK
clock => count[15].CLK
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
pulse <= pulse.DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|wm_setter_upper:wm8731_init|i2c_master:i2c_master
clk => last_sda_i_reg.CLK
clk => sda_i_reg.CLK
clk => scl_i_reg.CLK
clk => data_out_last_reg.CLK
clk => data_out_reg[0].CLK
clk => data_out_reg[1].CLK
clk => data_out_reg[2].CLK
clk => data_out_reg[3].CLK
clk => data_out_reg[4].CLK
clk => data_out_reg[5].CLK
clk => data_out_reg[6].CLK
clk => data_out_reg[7].CLK
clk => bit_count_reg[0].CLK
clk => bit_count_reg[1].CLK
clk => bit_count_reg[2].CLK
clk => bit_count_reg[3].CLK
clk => mode_stop_reg.CLK
clk => mode_write_multiple_reg.CLK
clk => mode_read_reg.CLK
clk => last_reg.CLK
clk => data_reg[0].CLK
clk => data_reg[1].CLK
clk => data_reg[2].CLK
clk => data_reg[3].CLK
clk => data_reg[4].CLK
clk => data_reg[5].CLK
clk => data_reg[6].CLK
clk => data_reg[7].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => phy_rx_data_reg.CLK
clk => missed_ack_reg.CLK
clk => bus_control_reg.CLK
clk => bus_active_reg.CLK
clk => busy_reg.CLK
clk => sda_o_reg.CLK
clk => scl_o_reg.CLK
clk => data_out_valid_reg.CLK
clk => data_in_ready_reg.CLK
clk => cmd_ready_reg.CLK
clk => delay_sda_reg.CLK
clk => delay_scl_reg.CLK
clk => delay_reg[0].CLK
clk => delay_reg[1].CLK
clk => delay_reg[2].CLK
clk => delay_reg[3].CLK
clk => delay_reg[4].CLK
clk => delay_reg[5].CLK
clk => delay_reg[6].CLK
clk => delay_reg[7].CLK
clk => delay_reg[8].CLK
clk => delay_reg[9].CLK
clk => delay_reg[10].CLK
clk => delay_reg[11].CLK
clk => delay_reg[12].CLK
clk => delay_reg[13].CLK
clk => delay_reg[14].CLK
clk => delay_reg[15].CLK
clk => delay_reg[16].CLK
clk => phy_state_reg~1.DATAIN
clk => state_reg~1.DATAIN
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_scl_reg.OUTPUTSELECT
rst => delay_sda_reg.OUTPUTSELECT
rst => cmd_ready_reg.OUTPUTSELECT
rst => data_in_ready_reg.OUTPUTSELECT
rst => data_out_valid_reg.OUTPUTSELECT
rst => scl_o_reg.OUTPUTSELECT
rst => sda_o_reg.OUTPUTSELECT
rst => busy_reg.OUTPUTSELECT
rst => bus_active_reg.OUTPUTSELECT
rst => bus_control_reg.OUTPUTSELECT
rst => missed_ack_reg.OUTPUTSELECT
cmd_address[0] => addr_next.DATAB
cmd_address[0] => Equal0.IN6
cmd_address[1] => addr_next.DATAB
cmd_address[1] => Equal0.IN5
cmd_address[2] => addr_next.DATAB
cmd_address[2] => Equal0.IN4
cmd_address[3] => addr_next.DATAB
cmd_address[3] => Equal0.IN3
cmd_address[4] => addr_next.DATAB
cmd_address[4] => Equal0.IN2
cmd_address[5] => addr_next.DATAB
cmd_address[5] => Equal0.IN1
cmd_address[6] => addr_next.DATAB
cmd_address[6] => Equal0.IN0
cmd_start => always0.IN1
cmd_read => always0.IN1
cmd_read => mode_read_next.DATAB
cmd_read => always0.IN1
cmd_read => always0.IN0
cmd_write => always0.IN0
cmd_write => always0.IN1
cmd_write => always0.IN1
cmd_write_multiple => always0.IN1
cmd_write_multiple => mode_write_multiple_next.DATAB
cmd_write_multiple => always0.IN1
cmd_stop => mode_stop_next.DATAB
cmd_stop => always0.IN1
cmd_valid => always0.IN1
cmd_valid => always0.IN1
cmd_ready <= cmd_ready_reg.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => data_next.DATAB
data_in[1] => data_next.DATAB
data_in[2] => data_next.DATAB
data_in[3] => data_next.DATAB
data_in[4] => data_next.DATAB
data_in[5] => data_next.DATAB
data_in[6] => data_next.DATAB
data_in[7] => data_next.DATAB
data_in_valid => always0.IN1
data_in_ready <= data_in_ready_reg.DB_MAX_OUTPUT_PORT_TYPE
data_in_last => last_next.DATAB
data_out[0] <= data_out_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_out_valid <= data_out_valid_reg.DB_MAX_OUTPUT_PORT_TYPE
data_out_ready => data_out_valid_next.IN1
data_out_last <= data_out_last_reg.DB_MAX_OUTPUT_PORT_TYPE
scl_i => scl_i_reg.DATAIN
scl_o <= scl_o_reg.DB_MAX_OUTPUT_PORT_TYPE
scl_t <= scl_o_reg.DB_MAX_OUTPUT_PORT_TYPE
sda_i => sda_i_reg.DATAIN
sda_o <= sda_o_reg.DB_MAX_OUTPUT_PORT_TYPE
sda_t <= sda_o_reg.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy_reg.DB_MAX_OUTPUT_PORT_TYPE
bus_control <= bus_control_reg.DB_MAX_OUTPUT_PORT_TYPE
bus_active <= bus_active_reg.DB_MAX_OUTPUT_PORT_TYPE
missed_ack <= missed_ack_reg.DB_MAX_OUTPUT_PORT_TYPE
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => Selector55.IN5
prescale[0] => Selector56.IN5
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => Selector54.IN5
prescale[1] => Selector55.IN4
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => Selector53.IN5
prescale[2] => Selector54.IN4
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => Selector52.IN5
prescale[3] => Selector53.IN4
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => Selector51.IN5
prescale[4] => Selector52.IN4
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => Selector50.IN5
prescale[5] => Selector51.IN4
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => Selector49.IN5
prescale[6] => Selector50.IN4
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => Selector48.IN5
prescale[7] => Selector49.IN4
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => Selector47.IN5
prescale[8] => Selector48.IN4
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => Selector46.IN5
prescale[9] => Selector47.IN4
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => Selector45.IN5
prescale[10] => Selector46.IN4
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => Selector44.IN5
prescale[11] => Selector45.IN4
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => Selector43.IN5
prescale[12] => Selector44.IN4
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => Selector42.IN5
prescale[13] => Selector43.IN4
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => Selector41.IN5
prescale[14] => Selector42.IN4
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => Selector40.IN5
prescale[15] => Selector41.IN4
stop_on_idle => always0.IN1


|pitchshift|nes_controller_reader:controller_reader
clock => clock.IN1
reset => reset.IN1
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => buttons_latch_next.DATAB
controller_data => Selector0.IN4
ps <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
ck <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
buttons[0] <= buttons[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[1] <= buttons[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[2] <= buttons[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[3] <= buttons[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[4] <= buttons[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[5] <= buttons[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[6] <= buttons[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[7] <= buttons[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|nes_controller_reader:controller_reader|divide_by_n:div
clk => out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => out.OUTPUTSELECT
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|beeper_triangle:triangle_gen
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => count[9].CLK
clock => count[10].CLK
clock => count[11].CLK
clock => count[12].CLK
clock => count[13].CLK
clock => count[14].CLK
clock => count[15].CLK
clock => count[16].CLK
clock => count[17].CLK
clock => count[18].CLK
clock => count[19].CLK
clock => count[20].CLK
clock => count[21].CLK
clock => count[22].CLK
clock => count[23].CLK
clock => count[24].CLK
clock => count[25].CLK
clock => count[26].CLK
clock => count[27].CLK
clock => count[28].CLK
clock => count[29].CLK
clock => count[30].CLK
clock => count[31].CLK
reset => ~NO_FANOUT~
data[0] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
data[1] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
data[2] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
data[3] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
data[4] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
data[5] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
data[6] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
data[7] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
data[8] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
data[9] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
data[10] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
data[11] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
data[12] <= count[20].DB_MAX_OUTPUT_PORT_TYPE
data[13] <= count[21].DB_MAX_OUTPUT_PORT_TYPE
data[14] <= count[22].DB_MAX_OUTPUT_PORT_TYPE
data[15] <= count[23].DB_MAX_OUTPUT_PORT_TYPE
data[16] <= count[24].DB_MAX_OUTPUT_PORT_TYPE
data[17] <= count[25].DB_MAX_OUTPUT_PORT_TYPE
data[18] <= count[26].DB_MAX_OUTPUT_PORT_TYPE
data[19] <= count[27].DB_MAX_OUTPUT_PORT_TYPE
data[20] <= count[28].DB_MAX_OUTPUT_PORT_TYPE
data[21] <= count[29].DB_MAX_OUTPUT_PORT_TYPE
data[22] <= count[30].DB_MAX_OUTPUT_PORT_TYPE
data[23] <= count[31].DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|i2s:i2s
clock => clock.IN1
reset => reset.IN1
data_to_send[0] => data_shift.DATAB
data_to_send[1] => data_shift.DATAB
data_to_send[2] => data_shift.DATAB
data_to_send[3] => data_shift.DATAB
data_to_send[4] => data_shift.DATAB
data_to_send[5] => data_shift.DATAB
data_to_send[6] => data_shift.DATAB
data_to_send[7] => data_shift.DATAB
data_to_send[8] => data_shift.DATAB
data_to_send[9] => data_shift.DATAB
data_to_send[10] => data_shift.DATAB
data_to_send[11] => data_shift.DATAB
data_to_send[12] => data_shift.DATAB
data_to_send[13] => data_shift.DATAB
data_to_send[14] => data_shift.DATAB
data_to_send[15] => data_shift.DATAB
data_to_send[16] => data_shift.DATAB
data_to_send[17] => data_shift.DATAB
data_to_send[18] => data_shift.DATAB
data_to_send[19] => data_shift.DATAB
data_to_send[20] => data_shift.DATAB
data_to_send[21] => data_shift.DATAB
data_to_send[22] => data_shift.DATAB
data_to_send[23] => data_shift.DATAB
BCK <= divide_by_n:div_256.out
LRCK <= LRCK~reg0.DB_MAX_OUTPUT_PORT_TYPE
DAT <= data_shift[31].DB_MAX_OUTPUT_PORT_TYPE


|pitchshift|i2s:i2s|divide_by_n:div_256
clk => out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => out.OUTPUTSELECT
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


